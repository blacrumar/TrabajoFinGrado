{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\blanc\\\\OneDrive - UNIVERSIDAD DE SEVILLA\\\\Escritorio\\\\4 ING SALUD\\\\Trabajo Fin de Grado\\\\intento\\\\client\\\\src\\\\components\\\\ListPractitioners.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ListPractitioners = () => {\n  _s();\n  const [practitioners, setPractitioners] = useState([]);\n  const [content, setContent] = useState(\"\");\n  useEffect(() => {\n    async function getPractitioner() {\n      const res = await fetch(\"/api/practitioners\");\n      const practitioners = await res.json();\n      setPractitioners(practitioners);\n    }\n    getPractitioner();\n  }, []);\n  const deletePractitioner = async practitionerId => {\n    const res = await fetch(`/api/practitioners/${practitionerId}`, {\n      method: \"DELETE\"\n    });\n    const json = await res.json();\n    if (json.acknowledged) {\n      setPractitioners(currentPractitioners => {\n        return currentPractitioners.filter(currentPractitioner => currentPractitioner._id !== practitionerId);\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [console.log(\"p=\", practitioners), practitioners && practitioners.length > 0 ? practitioners.map(pr => {\n      return /*#__PURE__*/_jsxDEV(\"article\", {\n        className: \"patient-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"active\",\n          children: [\"Estado activo:\", pr.active]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"name\",\n          children: [\"Nombre:\", pr.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"address\",\n          children: [\"Direccion:\", pr.address]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"edit\",\n          children: \"Editar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"delete\",\n          onClick: () => deletePractitioner(pr._id),\n          children: \"Borrar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }, this)]\n      }, pr._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this);\n    }) : /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"No hay sanitarios para mostrar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(ListPractitioners, \"b1MszdFUW5tDQjzZrQAS4JwmkCA=\");\n_c = ListPractitioners;\nvar _c;\n$RefreshReg$(_c, \"ListPractitioners\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","ListPractitioners","_s","practitioners","setPractitioners","content","setContent","getPractitioner","res","fetch","json","deletePractitioner","practitionerId","method","acknowledged","currentPractitioners","filter","currentPractitioner","_id","children","console","log","length","map","pr","className","active","fileName","_jsxFileName","lineNumber","columnNumber","name","address","onClick","_c","$RefreshReg$"],"sources":["C:/Users/blanc/OneDrive - UNIVERSIDAD DE SEVILLA/Escritorio/4 ING SALUD/Trabajo Fin de Grado/intento/client/src/components/ListPractitioners.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nexport const ListPractitioners = () => {\r\n \r\n  const [practitioners, setPractitioners] = useState([]); \r\n  const [content, setContent] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    async function getPractitioner() {\r\n      const res = await fetch(\"/api/practitioners\");\r\n      const practitioners = await res.json();\r\n      setPractitioners(practitioners);\r\n\r\n    }\r\n    getPractitioner();\r\n\r\n\r\n  }, []);\r\n\r\n  const deletePractitioner = async (practitionerId) => {\r\n    const res = await fetch(`/api/practitioners/${practitionerId}`, {\r\n      method: \"DELETE\"\r\n    });\r\n    const json = await res.json();\r\n    if (json.acknowledged) {\r\n      setPractitioners(currentPractitioners => {\r\n        return currentPractitioners.filter((currentPractitioner) => currentPractitioner._id !== practitionerId);\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n    {console.log(\"p=\", practitioners)}\r\n      {practitioners && practitioners.length > 0 ?\r\n        practitioners.map(pr => {\r\n          return (\r\n            <article key={pr._id} className=\"patient-item\">\r\n              <p className=\"active\">Estado activo:{pr.active}</p>\r\n              <p className=\"name\">Nombre:{pr.name}</p>\r\n              <p className=\"address\">Direccion:{pr.address}</p>\r\n              \r\n              <button className=\"edit\">Editar</button>\r\n              <button className=\"delete\" onClick={() => deletePractitioner(pr._id)}>Borrar</button>\r\n            </article>\r\n          );\r\n        }) : \r\n        <h2>No hay sanitarios para mostrar</h2>\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}