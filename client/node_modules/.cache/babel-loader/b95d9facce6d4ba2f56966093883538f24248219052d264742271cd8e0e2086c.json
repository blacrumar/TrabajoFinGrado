{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\blanc\\\\OneDrive - UNIVERSIDAD DE SEVILLA\\\\Escritorio\\\\4 ING SALUD\\\\Trabajo Fin de Grado\\\\intento\\\\client\\\\src\\\\components\\\\NewPractitioner.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const NewPractitioner = () => {\n  _s();\n  //El estado de los datos inicialmente esta vacío\n  const [practitionerState, setPractitionerState] = useState({\n    active: '',\n    name: '',\n    address: ''\n  });\n\n  //Desestructuramos el estado para poder coger los valores por separado\n  const {\n    active,\n    name,\n    address\n  } = practitionerState;\n  const getDataPractitionerForm = e => {\n    //Para evitar el refresco de pantalla cuando le de a enviar, que es el comportamiento por defecto\n    e.preventDefault();\n    //Conseguir los datos del form\n    let target = e.target;\n    //Conseguir el nombre y el apellido\n    let active = target.active.value;\n    let name = target.name.value;\n    let address = target.address.value;\n\n    //Crear el objeto de nuevo paciente y que se guarden los datos\n    let practitioner = {\n      id: new Date().getTime(),\n      active,\n      name,\n      address\n    };\n    //Asi tengo disponible dentro del estado el nuevo objeto patient creado\n    setPractitionerState(practitioner);\n\n    //Actualizar el estado del listado principal\n    {/*}\r\n     setListadoState(elementos => {\r\n        return[...elementos, patient];\r\n        //devolvemos todos los elementos que ya hubiera más el nuevo elemento creado\r\n     });\r\n     //Pasamos el metodo definido debajo para almacenr\r\n     saveInStorage(\"patients\", patient);\r\n     */}\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"title\",\n      children: \"A\\xF1adir m\\xE9dico\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), active && name && address, /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form_input\",\n        id: \"active\",\n        name: \"active\",\n        placeholder: \"Activo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form_input\",\n        id: \"name\",\n        name: \"name\",\n        placeholder: \"Nombre\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text-area\",\n        className: \"form_input\",\n        id: \"address\",\n        name: \"address\",\n        placeholder: \"Direccion\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        className: \"form_buttom\",\n        id: \"addPatient\",\n        name: \"addPatient\",\n        placeholder: \"A\\xF1adir paciente\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n_s(NewPractitioner, \"SRvk1elj6ovMqF8kKNmTsd8jWik=\");\n_c = NewPractitioner;\nvar _c;\n$RefreshReg$(_c, \"NewPractitioner\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","NewPractitioner","_s","practitionerState","setPractitionerState","active","name","address","getDataPractitionerForm","e","preventDefault","target","value","practitioner","id","Date","getTime","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/blanc/OneDrive - UNIVERSIDAD DE SEVILLA/Escritorio/4 ING SALUD/Trabajo Fin de Grado/intento/client/src/components/NewPractitioner.js"],"sourcesContent":["import React, { useState } from 'react'\r\n\r\nexport const NewPractitioner = () => {\r\n\r\n\r\n    //El estado de los datos inicialmente esta vacío\r\n    const [practitionerState, setPractitionerState] = useState({ active: '', name: '', address: ''});\r\n\r\n    //Desestructuramos el estado para poder coger los valores por separado\r\n    const { active, name, address } = practitionerState;\r\n\r\n    const getDataPractitionerForm = e => {\r\n        //Para evitar el refresco de pantalla cuando le de a enviar, que es el comportamiento por defecto\r\n        e.preventDefault();\r\n        //Conseguir los datos del form\r\n        let target = e.target;\r\n        //Conseguir el nombre y el apellido\r\n        let active = target.active.value;\r\n        let name = target.name.value;\r\n        let address = target.address.value;\r\n        \r\n        //Crear el objeto de nuevo paciente y que se guarden los datos\r\n        let practitioner = {\r\n            id: new Date().getTime(),\r\n            active,\r\n            name,\r\n            address\r\n            \r\n        };\r\n        //Asi tengo disponible dentro del estado el nuevo objeto patient creado\r\n        setPractitionerState(practitioner);\r\n\r\n        //Actualizar el estado del listado principal\r\n        {/*}\r\n        setListadoState(elementos => {\r\n            return[...elementos, patient];\r\n            //devolvemos todos los elementos que ya hubiera más el nuevo elemento creado\r\n        });\r\n        //Pasamos el metodo definido debajo para almacenr\r\n        saveInStorage(\"patients\", patient);\r\n    */}\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h3 className='title'>Añadir médico</h3>\r\n            \r\n            {active && name && address}\r\n\r\n            <form className='form'>\r\n                <input type='text'\r\n                    className='form_input'\r\n                    id='active'\r\n                    name='active'\r\n                    placeholder='Activo' />\r\n<></>\r\n                <input type='text'\r\n                    className='form_input'\r\n                    id='name'\r\n                    name='name'\r\n                    placeholder='Nombre' />\r\n\r\n                <input type='text-area'\r\n                    className='form_input'\r\n                    id='address'\r\n                    name='address'\r\n                    placeholder='Direccion' />\r\n\r\n                \r\n\r\n                <input type='submit'\r\n                    className='form_buttom'\r\n                    id='addPatient'\r\n                    name='addPatient'\r\n                    placeholder='Añadir paciente' />\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}