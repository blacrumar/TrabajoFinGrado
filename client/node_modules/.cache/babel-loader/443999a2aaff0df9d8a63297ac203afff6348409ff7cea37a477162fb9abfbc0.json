{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\blanc\\\\OneDrive - UNIVERSIDAD DE SEVILLA\\\\Escritorio\\\\4 ING SALUD\\\\Trabajo Fin de Grado\\\\intento\\\\client\\\\src\\\\components\\\\ListObservations.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ListObservations = ({\n  pacienteId\n}) => {\n  _s();\n  const [observations, setObservations] = useState([]);\n  useEffect(() => {\n    const fetchObservations = async () => {\n      try {\n        const response = await fetch(`/api/pacientes/${pacienteId}/observations`);\n        if (response.ok) {\n          const data = await response.json();\n          setObservations(data);\n        } else {\n          console.error('Error al cargar las observaciones:');\n        }\n      } catch (error) {\n        console.error('Error al conectar con el servidor:', error);\n      }\n    };\n    fetchObservations();\n  }, [pacienteId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: observations.map(observation => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: observation.descripcion\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: observation.fecha\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this)]\n      }, observation._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n_s(ListObservations, \"0dgG6tDVTQPVjpNR6tKzVbZWs8A=\");\n_c = ListObservations;\nexport default ListObservations;\nvar _c;\n$RefreshReg$(_c, \"ListObservations\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","ListObservations","pacienteId","_s","observations","setObservations","fetchObservations","response","fetch","ok","data","json","console","error","children","map","observation","descripcion","fileName","_jsxFileName","lineNumber","columnNumber","fecha","_id","_c","$RefreshReg$"],"sources":["C:/Users/blanc/OneDrive - UNIVERSIDAD DE SEVILLA/Escritorio/4 ING SALUD/Trabajo Fin de Grado/intento/client/src/components/ListObservations.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nexport const ListObservations = ({pacienteId}) => {\r\n\r\n    const [observations, setObservations] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchObservations = async () => {\r\n            try{\r\n                const response = await fetch(`/api/pacientes/${pacienteId}/observations`);\r\n                if(response.ok){\r\n                    const data = await response.json();\r\n                    setObservations(data);\r\n                } else {\r\n                    console.error('Error al cargar las observaciones:');\r\n                }\r\n            } catch (error) {\r\n                console.error('Error al conectar con el servidor:', error);\r\n\r\n            }\r\n        };\r\n        fetchObservations();\r\n    }, [pacienteId]);\r\n\r\n    return (\r\n        <div>\r\n            \r\n            <ul>\r\n        {observations.map(observation => (\r\n          <li key={observation._id}>\r\n            {/* Aquí puedes mostrar los detalles de cada observación */}\r\n            <p>{observation.descripcion}</p>\r\n            <p>{observation.fecha}</p>\r\n            {/* Agrega más campos según la estructura de tus observaciones */}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default ListObservations;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,OAAO,MAAMC,gBAAgB,GAAGA,CAAC;EAACC;AAAU,CAAC,KAAK;EAAAC,EAAA;EAE9C,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEpDD,SAAS,CAAC,MAAM;IACZ,MAAMS,iBAAiB,GAAG,MAAAA,CAAA,KAAY;MAClC,IAAG;QACC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,kBAAiBN,UAAW,eAAc,CAAC;QACzE,IAAGK,QAAQ,CAACE,EAAE,EAAC;UACX,MAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;UAClCN,eAAe,CAACK,IAAI,CAAC;QACzB,CAAC,MAAM;UACHE,OAAO,CAACC,KAAK,CAAC,oCAAoC,CAAC;QACvD;MACJ,CAAC,CAAC,OAAOA,KAAK,EAAE;QACZD,OAAO,CAACC,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;MAE9D;IACJ,CAAC;IACDP,iBAAiB,CAAC,CAAC;EACvB,CAAC,EAAE,CAACJ,UAAU,CAAC,CAAC;EAEhB,oBACIF,OAAA;IAAAc,QAAA,eAEId,OAAA;MAAAc,QAAA,EACHV,YAAY,CAACW,GAAG,CAACC,WAAW,iBAC3BhB,OAAA;QAAAc,QAAA,gBAEEd,OAAA;UAAAc,QAAA,EAAIE,WAAW,CAACC;QAAW;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAChCrB,OAAA;UAAAc,QAAA,EAAIE,WAAW,CAACM;QAAK;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GAHnBL,WAAW,CAACO,GAAG;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKpB,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAGd,CAAC;AAAAlB,EAAA,CAtCYF,gBAAgB;AAAAuB,EAAA,GAAhBvB,gBAAgB;AAwC7B,eAAeA,gBAAgB;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}