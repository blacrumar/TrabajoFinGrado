{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\blanc\\\\OneDrive - UNIVERSIDAD DE SEVILLA\\\\Escritorio\\\\4 ING SALUD\\\\Trabajo Fin de Grado\\\\intento\\\\client\\\\src\\\\components\\\\ListPatients.js\",\n  _s = $RefreshSig$();\n/*\r\nimport React from 'react'\r\nimport { useEffect, useState } from 'react'\r\n//import { MongoClient } from 'mongodb'\r\n\r\nexport const ListPatients = (props) =>  {\r\n  const { paciente, setPacientes } = props;\r\n\r\n  //Creamos un estado para poder listar todas los pacientes que tenga el array del localstorage\r\n  //este estado inicialmente estara vacio por eso se ponen corchetes vacios\r\n  const [listadoState, setListadoState] = useState([]);\r\n /*\r\n   //vamos a usar el hook use effect pq es lo que se va a ejecutar nada mas cargar el componente\r\n  //Por eso la lista vacia como segundo componente\r\n  useEffect(() => {\r\n    getPatient();\r\n  }, []);\r\n\r\n  const getPatient = () => {\r\n    //el objeto que recogemos lo pasamos a un objeto usable, por eso hacemos JSON.parse\r\n    let patients = JSON.parse(localStorage.getItem(\"patients\")); //FETCH\r\n    //guardamos los pacientes sacados del array del localstorage en el estado\r\n    setListadoState(patients);\r\n  }\r\n*/\n/*\r\n  const updatePaciente = async (pacienteId, pacienteStatus) => {\r\n    const res = await fetch(`/api/pacientes/${pacienteId}`, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify({ status: pacienteStatus }),\r\n        headers: {\r\n            \"Content-Type\": \"applicacion/json\"\r\n        },\r\n\r\n    });\r\n*/\n/*\r\n    //Creo que este codigo es para el caso del video\r\n    //hay un checkbox al lado de cada paciente para hacer tick o quitarlo\r\n    //cambia la propiedad status de true a false\r\n    const json = await res.json();\r\n    if (json.acknowledged) {\r\n        setPacientes(currentPacientes => {\r\n            return currentPacientes.map((currentPaciente) => {\r\n                if (currentPaciente._id === pacienteId) {\r\n                    return { ...currentPaciente, status: !currentPaciente.status }\r\n                }\r\n                return currentPaciente;\r\n            })\r\n\r\n        })\r\n    }\r\n  \r\n};\r\n\r\n*/\n/*\r\n  const deletePaciente = async (pacienteId) => {\r\n    const res = await fetch(`api/pacientes/${pacienteId}`, {\r\n        method: \"DELETE\"\r\n    });\r\n    const json = await res.json();\r\n    if(json.acknowledged){\r\n        setPacientes(currentPacientes => {\r\n            return currentPacientes\r\n            .filter((currentPaciente) => (currentPaciente._id !== pacienteId));\r\n        })\r\n    }\r\n}\r\n\r\n \r\n    \r\n  return (\r\n\r\n    \r\n    <>\r\n    \r\n    \r\n     {paciente != null ?\r\n            paciente.map(p => {\r\n              return(\r\n                <article key={paciente._id} className=\"patient-item\">\r\n                      <p className=\"active\">{paciente.active}</p>\r\n                      <p className=\"name\">{paciente.name}</p>\r\n                      <p className=\"gender\">{paciente.gender}</p>\r\n                      <p className=\"birthDate\">{paciente.birthDate}</p>\r\n\r\n                      <button className=\"edit\">Editar</button>\r\n                      <button className=\"delete\" onClick={() => deletePaciente(paciente._id)}>Borrar</button>\r\n                  </article>\r\n\r\n              );\r\n            })\r\n        : <h2>No hay pacientes para mostrar</h2>\r\n    } \r\n    </>\r\n  )\r\n\r\n\r\n\r\n}*/\n\n///////////////////////////////////////////////////////////////\n\nimport React, { useEffect, useState } from 'react';\nimport { EditPaciente } from '../components/EditPaciente';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ListPatients = () => {\n  _s();\n  // const { pacientes, setPacientes } = props;\n\n  const [pacientes, setPacientes] = useState([]);\n  //const [showEditForm, setShowEditForm] = useState(false);\n  const [editedPaciente, setEditedPaciente] = useState(null);\n\n  //Para el buscador\n  const [filteredPacientes, setFilteredPacientes] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n\n  //Para el filtrado\n  const [filterByActive, setFilterByActive] = useState('all'); // Opción predeterminada: mostrar todos los pacientes\n  const [filterByGender, setFilterByGender] = useState('all'); // Opción predeterminada: mostrar todos los pacientes\n\n  useEffect(() => {\n    async function getPacientes() {\n      const res = await fetch(\"/api/pacientes\");\n      const pacientes = await res.json();\n      setPacientes(pacientes);\n      setFilteredPacientes(pacientes); //pasamos todos los pacientes que hay\n    }\n    getPacientes();\n  }, []);\n\n  //filtrado para el buscador\n  /*\r\n  const handleSearch = (e) => {\r\n    const value = e.target.value;\r\n    setSearchTerm(value);\r\n    const filteredResults = pacientes.filter(paciente =>\r\n      paciente.name.toLowerCase().includes(value.toLowerCase())\r\n      );\r\n    setFilteredPacientes(filteredResults);\r\n  };\r\n  */\n\n  //filtrado + buscador (tambien se tiene que filtrar)\n  const handleSearch = e => {\n    const value = e.target.value;\n    setSearchTerm(value);\n    filterPacientes(value, filterByActive, filterByGender);\n  };\n  const handleFilterByActiveChange = e => {\n    const value = e.target.value;\n    setFilterByActive(value);\n    filterPacientes(searchTerm, value, filterByGender);\n  };\n  const handleFilterByGenderChange = e => {\n    const value = e.target.value;\n    setFilterByGender(value);\n    filterPacientes(searchTerm, filterByActive, value);\n  };\n  const filterPacientes = (searchTerm, activeOption, genderOption) => {\n    let filteredResults = pacientes.filter(paciente => (paciente.name.toLowerCase().includes(searchTerm.toLowerCase()) || searchTerm === '') && (activeOption === 'all' || paciente.active === activeOption) && (genderOption === 'all' || paciente.gender === genderOption));\n    setFilteredPacientes(filteredResults);\n  };\n  const deletePaciente = async pacienteId => {\n    const res = await fetch(`/api/pacientes/${pacienteId}`, {\n      method: \"DELETE\"\n    });\n    const json = await res.json();\n    if (json.acknowledged) {\n      setPacientes(currentPacientes => {\n        return currentPacientes.filter(currentPaciente => currentPaciente._id !== pacienteId);\n      });\n    }\n  };\n  const handleEditClick = paciente => {\n    setEditedPaciente(paciente);\n  };\n  const handleCloseEdit = () => {\n    setEditedPaciente(null); // Restablecer editedPaciente a null para ocultar el componente EditPaciente\n  };\n  const updatePacienteList = async () => {\n    try {\n      const res = await fetch(\"/api/pacientes\");\n      const pacientes = await res.json();\n      setPacientes(pacientes);\n    } catch (error) {\n      console.error('Error al actualizar la lista de pacientes:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"barra-buscador\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"buscador\",\n        type: \"text\",\n        placeholder: \"Buscar por nombre\",\n        value: searchTerm,\n        onChange: handleSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"buscar\",\n        src: \"/buscar.avif\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filtrado\",\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        value: filterByActive,\n        onChange: handleFilterByActiveChange,\n        name: \"ESTADO\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"all\",\n          children: \"ESTADO\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"true\",\n          children: \"True\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"false\",\n          children: \"False\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"all\",\n          children: \"Todos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: filterByGender,\n        onChange: handleFilterByGenderChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"all\",\n          children: \"G\\xC9NERO\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"male\",\n          children: \"Masculino\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"female\",\n          children: \"Femenino\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"all\",\n          children: \"Todos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"other\",\n          children: \"Otro\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }, this), filteredPacientes.map(paciente => /*#__PURE__*/_jsxDEV(\"article\", {\n      className: \"patient-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"active\",\n        children: [\"Estado activo:\", paciente.active]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"name\",\n        children: [\"Nombre:\", paciente.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"gender\",\n        children: [\"G\\xE9nero:\", paciente.gender]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"birthDate\",\n        children: [\"Fecha de nacimiento:\", paciente.birthDate]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"edit\",\n          onClick: () => handleEditClick(paciente),\n          children: \"Editar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"delete\",\n          onClick: () => deletePaciente(paciente._id),\n          children: \"Borrar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 11\n      }, this)]\n    }, paciente._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 9\n    }, this)), editedPaciente && /*#__PURE__*/_jsxDEV(EditPaciente, {\n      paciente: editedPaciente,\n      onClose: handleCloseEdit,\n      updatePacienteList: updatePacienteList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 218,\n    columnNumber: 5\n  }, this);\n};\n_s(ListPatients, \"n6P0a4R9BaIfs7bjGLbIKlg66jI=\");\n_c = ListPatients;\nexport default ListPatients;\n{/*\r\n    {editedPaciente ? (\r\n      <EditPaciente paciente={editedPaciente} onClose={handleCloseEdit} updatePacienteList={updatePacienteList} />\r\n    ) : (\r\n      <div>\r\n        {pacientes && pacientes.length > 0 ? (\r\n          pacientes.map(p => (\r\n \n            <article key={p._id} className=\"patient-item\">\r\n              <p className=\"active\">Estado activo:{p.active}</p>\r\n              <p className=\"name\">Nombre:{p.name}</p>\r\n              <p className=\"gender\">Género:{p.gender}</p>\r\n              <p className=\"birthDate\">Fecha de nacimiento:{p.birthDate}</p>\r\n              <div>\r\n                <button className=\"edit\" onClick={() => handleEditClick(p)}>Editar</button>\r\n                <button className=\"delete\" onClick={() => deletePaciente(p._id)}>Borrar</button>\r\n              </div>\r\n            </article>\r\n          ))\r\n \n \n        ) : (\r\n \n          <h2>No hay pacientes para mostrar</h2>\r\n        )}\r\n \n      </div>\r\n    )}\r\n  </div>\r\n  );\r\n };\r\n export default ListPatients;\r\n */}\nvar _c;\n$RefreshReg$(_c, \"ListPatients\");","map":{"version":3,"names":["React","useEffect","useState","EditPaciente","jsxDEV","_jsxDEV","ListPatients","_s","pacientes","setPacientes","editedPaciente","setEditedPaciente","filteredPacientes","setFilteredPacientes","searchTerm","setSearchTerm","filterByActive","setFilterByActive","filterByGender","setFilterByGender","getPacientes","res","fetch","json","handleSearch","e","value","target","filterPacientes","handleFilterByActiveChange","handleFilterByGenderChange","activeOption","genderOption","filteredResults","filter","paciente","name","toLowerCase","includes","active","gender","deletePaciente","pacienteId","method","acknowledged","currentPacientes","currentPaciente","_id","handleEditClick","handleCloseEdit","updatePacienteList","error","console","children","className","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","src","map","birthDate","onClick","onClose","_c","$RefreshReg$"],"sources":["C:/Users/blanc/OneDrive - UNIVERSIDAD DE SEVILLA/Escritorio/4 ING SALUD/Trabajo Fin de Grado/intento/client/src/components/ListPatients.js"],"sourcesContent":["/*\r\nimport React from 'react'\r\nimport { useEffect, useState } from 'react'\r\n//import { MongoClient } from 'mongodb'\r\n\r\nexport const ListPatients = (props) =>  {\r\n  const { paciente, setPacientes } = props;\r\n\r\n  //Creamos un estado para poder listar todas los pacientes que tenga el array del localstorage\r\n  //este estado inicialmente estara vacio por eso se ponen corchetes vacios\r\n  const [listadoState, setListadoState] = useState([]);\r\n /*\r\n   //vamos a usar el hook use effect pq es lo que se va a ejecutar nada mas cargar el componente\r\n  //Por eso la lista vacia como segundo componente\r\n  useEffect(() => {\r\n    getPatient();\r\n  }, []);\r\n\r\n  const getPatient = () => {\r\n    //el objeto que recogemos lo pasamos a un objeto usable, por eso hacemos JSON.parse\r\n    let patients = JSON.parse(localStorage.getItem(\"patients\")); //FETCH\r\n    //guardamos los pacientes sacados del array del localstorage en el estado\r\n    setListadoState(patients);\r\n  }\r\n*/\r\n/*\r\n  const updatePaciente = async (pacienteId, pacienteStatus) => {\r\n    const res = await fetch(`/api/pacientes/${pacienteId}`, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify({ status: pacienteStatus }),\r\n        headers: {\r\n            \"Content-Type\": \"applicacion/json\"\r\n        },\r\n\r\n    });\r\n*/\r\n/*\r\n    //Creo que este codigo es para el caso del video\r\n    //hay un checkbox al lado de cada paciente para hacer tick o quitarlo\r\n    //cambia la propiedad status de true a false\r\n    const json = await res.json();\r\n    if (json.acknowledged) {\r\n        setPacientes(currentPacientes => {\r\n            return currentPacientes.map((currentPaciente) => {\r\n                if (currentPaciente._id === pacienteId) {\r\n                    return { ...currentPaciente, status: !currentPaciente.status }\r\n                }\r\n                return currentPaciente;\r\n            })\r\n\r\n        })\r\n    }\r\n  \r\n};\r\n\r\n*/\r\n/*\r\n  const deletePaciente = async (pacienteId) => {\r\n    const res = await fetch(`api/pacientes/${pacienteId}`, {\r\n        method: \"DELETE\"\r\n    });\r\n    const json = await res.json();\r\n    if(json.acknowledged){\r\n        setPacientes(currentPacientes => {\r\n            return currentPacientes\r\n            .filter((currentPaciente) => (currentPaciente._id !== pacienteId));\r\n        })\r\n    }\r\n}\r\n\r\n \r\n    \r\n  return (\r\n\r\n    \r\n    <>\r\n    \r\n    \r\n     {paciente != null ?\r\n            paciente.map(p => {\r\n              return(\r\n                <article key={paciente._id} className=\"patient-item\">\r\n                      <p className=\"active\">{paciente.active}</p>\r\n                      <p className=\"name\">{paciente.name}</p>\r\n                      <p className=\"gender\">{paciente.gender}</p>\r\n                      <p className=\"birthDate\">{paciente.birthDate}</p>\r\n\r\n                      <button className=\"edit\">Editar</button>\r\n                      <button className=\"delete\" onClick={() => deletePaciente(paciente._id)}>Borrar</button>\r\n                  </article>\r\n\r\n              );\r\n            })\r\n        : <h2>No hay pacientes para mostrar</h2>\r\n    } \r\n    </>\r\n  )\r\n\r\n\r\n\r\n}*/\r\n\r\n\r\n\r\n\r\n\r\n\r\n///////////////////////////////////////////////////////////////\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport { EditPaciente } from '../components/EditPaciente';\r\n\r\n\r\nexport const ListPatients = () => {\r\n  // const { pacientes, setPacientes } = props;\r\n\r\n  const [pacientes, setPacientes] = useState([]);\r\n  //const [showEditForm, setShowEditForm] = useState(false);\r\n  const [editedPaciente, setEditedPaciente] = useState(null);\r\n\r\n\r\n  //Para el buscador\r\n  const [filteredPacientes, setFilteredPacientes] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n\r\n  //Para el filtrado\r\n  const [filterByActive, setFilterByActive] = useState('all'); // Opción predeterminada: mostrar todos los pacientes\r\n  const [filterByGender, setFilterByGender] = useState('all'); // Opción predeterminada: mostrar todos los pacientes\r\n  \r\n\r\n\r\n  useEffect(() => {\r\n    async function getPacientes() {\r\n      const res = await fetch(\"/api/pacientes\");\r\n      const pacientes = await res.json();\r\n      setPacientes(pacientes);\r\n      setFilteredPacientes(pacientes); //pasamos todos los pacientes que hay\r\n    }\r\n    getPacientes();\r\n  }, []);\r\n\r\n  //filtrado para el buscador\r\n  /*\r\n  const handleSearch = (e) => {\r\n    const value = e.target.value;\r\n    setSearchTerm(value);\r\n    const filteredResults = pacientes.filter(paciente =>\r\n      paciente.name.toLowerCase().includes(value.toLowerCase())\r\n\r\n    );\r\n    setFilteredPacientes(filteredResults);\r\n  };\r\n  */\r\n\r\n  //filtrado + buscador (tambien se tiene que filtrar)\r\n  const handleSearch = (e) => {\r\n    const value = e.target.value;\r\n    setSearchTerm(value);\r\n    filterPacientes(value, filterByActive, filterByGender);\r\n  };\r\n\r\n  const handleFilterByActiveChange = (e) => {\r\n    const value = e.target.value;\r\n    setFilterByActive(value);\r\n    filterPacientes(searchTerm, value, filterByGender);\r\n  };\r\n\r\n  const handleFilterByGenderChange = (e) => {\r\n    const value = e.target.value;\r\n    setFilterByGender(value);\r\n    filterPacientes(searchTerm, filterByActive, value);\r\n  };\r\n\r\n  const filterPacientes = (searchTerm, activeOption, genderOption) => {\r\n    let filteredResults = pacientes.filter(paciente =>\r\n      (paciente.name.toLowerCase().includes(searchTerm.toLowerCase()) || searchTerm === '') &&\r\n      (activeOption === 'all' || paciente.active === activeOption) &&\r\n      (genderOption === 'all' || paciente.gender === genderOption)\r\n    );\r\n    setFilteredPacientes(filteredResults);\r\n  };\r\n\r\n\r\n\r\n  const deletePaciente = async (pacienteId) => {\r\n    const res = await fetch(`/api/pacientes/${pacienteId}`, {\r\n      method: \"DELETE\"\r\n    });\r\n    const json = await res.json();\r\n    if (json.acknowledged) {\r\n      setPacientes(currentPacientes => {\r\n        return currentPacientes.filter((currentPaciente) => currentPaciente._id !== pacienteId);\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleEditClick = (paciente) => {\r\n    setEditedPaciente(paciente);\r\n  };\r\n\r\n  const handleCloseEdit = () => {\r\n    setEditedPaciente(null); // Restablecer editedPaciente a null para ocultar el componente EditPaciente\r\n  };\r\n\r\n  const updatePacienteList = async () => {\r\n    try {\r\n      const res = await fetch(\"/api/pacientes\");\r\n      const pacientes = await res.json();\r\n      setPacientes(pacientes);\r\n    } catch (error) {\r\n      console.error('Error al actualizar la lista de pacientes:', error);\r\n    }\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <div className='barra-buscador'>\r\n      <input className='buscador'\r\n        type=\"text\"\r\n        placeholder=\"Buscar por nombre\"\r\n        value={searchTerm}\r\n        onChange={handleSearch}\r\n      />\r\n      <img className=\"buscar\" src='/buscar.avif' />\r\n      </div>\r\n      <div className='filtrado'>\r\n        <select value={filterByActive} onChange={handleFilterByActiveChange} name='ESTADO'>\r\n          <option value=\"all\">ESTADO</option>\r\n          <option value=\"true\">True</option>\r\n          <option value=\"false\">False</option>\r\n          <option value=\"all\">Todos</option>\r\n        </select>\r\n        <select value={filterByGender} onChange={handleFilterByGenderChange}>\r\n          <option value=\"all\">GÉNERO</option>\r\n          <option value=\"male\">Masculino</option>\r\n          <option value=\"female\">Femenino</option>\r\n          <option value=\"all\">Todos</option>\r\n          <option value=\"other\">Otro</option>\r\n        </select>\r\n      </div>\r\n      {filteredPacientes.map(paciente => (\r\n        <article key={paciente._id} className=\"patient-item\">\r\n          <p className=\"active\">Estado activo:{paciente.active}</p>\r\n          <p className=\"name\">Nombre:{paciente.name}</p>\r\n          <p className=\"gender\">Género:{paciente.gender}</p>\r\n          <p className=\"birthDate\">Fecha de nacimiento:{paciente.birthDate}</p>\r\n          <div>\r\n            <button className=\"edit\" onClick={() => handleEditClick(paciente)}>Editar</button>\r\n            <button className=\"delete\" onClick={() => deletePaciente(paciente._id)}>Borrar</button>\r\n          </div>\r\n        </article>\r\n      ))}\r\n\r\n      {editedPaciente && (\r\n        <EditPaciente paciente={editedPaciente} onClose={handleCloseEdit} updatePacienteList={updatePacienteList} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default ListPatients;\r\n\r\n\r\n{/*\r\n    {editedPaciente ? (\r\n      <EditPaciente paciente={editedPaciente} onClose={handleCloseEdit} updatePacienteList={updatePacienteList} />\r\n    ) : (\r\n      <div>\r\n        {pacientes && pacientes.length > 0 ? (\r\n          pacientes.map(p => (\r\n\r\n            <article key={p._id} className=\"patient-item\">\r\n              <p className=\"active\">Estado activo:{p.active}</p>\r\n              <p className=\"name\">Nombre:{p.name}</p>\r\n              <p className=\"gender\">Género:{p.gender}</p>\r\n              <p className=\"birthDate\">Fecha de nacimiento:{p.birthDate}</p>\r\n              <div>\r\n                <button className=\"edit\" onClick={() => handleEditClick(p)}>Editar</button>\r\n                <button className=\"delete\" onClick={() => deletePaciente(p._id)}>Borrar</button>\r\n              </div>\r\n            </article>\r\n          ))\r\n\r\n\r\n        ) : (\r\n\r\n          <h2>No hay pacientes para mostrar</h2>\r\n        )}\r\n\r\n      </div>\r\n    )}\r\n  </div>\r\n  );\r\n};\r\nexport default ListPatients;\r\n*/}"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}