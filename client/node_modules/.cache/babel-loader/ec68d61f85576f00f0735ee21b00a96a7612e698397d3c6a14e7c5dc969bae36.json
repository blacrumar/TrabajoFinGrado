{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\blanc\\\\OneDrive - UNIVERSIDAD DE SEVILLA\\\\Escritorio\\\\4 ING SALUD\\\\Trabajo Fin de Grado\\\\intento\\\\client\\\\src\\\\components\\\\NewPatient.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const NewPatient = () => {\n  _s();\n  //El estado de los datos inicialmente esta vacío\n  const [patientState, setPatientState] = useState({\n    active: '',\n    name: '',\n    gender: '',\n    birthDate: ''\n  });\n\n  //Desestructuramos el estado para poder coger los valores por separado\n  const {\n    active,\n    name,\n    gender,\n    birthDate\n  } = patientState;\n  const getDataPatientForm = e => {\n    //Para evitar el refresco de pantalla cuando le de a enviar, que es el comportamiento por defecto\n    e.preventDefault();\n    //Conseguir los datos del form\n    let target = e.target;\n    //Conseguir el nombre y el apellido\n    let active = target.active.value;\n    let name = target.name.value;\n    let gender = target.gender.value;\n    let birthDate = target.birthDate.value;\n    //Crear el objeto de nuevo paciente y que se guarden los datos\n    let patient = {\n      id: new Date().getTime(),\n      active,\n      name,\n      gender,\n      birthDate\n    };\n    //Asi tengo disponible dentro del estado el nuevo objeto patient creado\n    setPatientState(patient);\n\n    //Actualizar el estado del listado principal\n    {/*}\r\n     setListadoState(elementos => {\r\n        return[...elementos, patient];\r\n        //devolvemos todos los elementos que ya hubiera más el nuevo elemento creado\r\n     });\r\n     //Pasamos el metodo definido debajo para almacenr\r\n     saveInStorage(\"patients\", patient);\r\n     */}\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"title\",\n      children: \"A\\xF1adir paciente\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), active && name && gender && birthDate, /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form_input\",\n        id: \"active\",\n        name: \"active\",\n        placeholder: \"Activo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form_input\",\n        id: \"name\",\n        name: \"name\",\n        placeholder: \"Nombre\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form_input\",\n        id: \"gender\",\n        name: \"gender\",\n        placeholder: \"G\\xE9nero\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form_input\",\n        id: \"birthDate\",\n        name: \"birthDate\",\n        placeholder: \"Fecha nacimiento\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        id: \"addPatient\",\n        name: \"addPatient\",\n        placeholder: \"A\\xF1adir paciente\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n_s(NewPatient, \"Tl2Vr2BbaUckPW+tD6QrEjFIpKk=\");\n_c = NewPatient;\nvar _c;\n$RefreshReg$(_c, \"NewPatient\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","NewPatient","_s","patientState","setPatientState","active","name","gender","birthDate","getDataPatientForm","e","preventDefault","target","value","patient","id","Date","getTime","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/blanc/OneDrive - UNIVERSIDAD DE SEVILLA/Escritorio/4 ING SALUD/Trabajo Fin de Grado/intento/client/src/components/NewPatient.js"],"sourcesContent":["import React, { useState } from 'react'\r\n\r\nexport const NewPatient = () => {\r\n\r\n\r\n    //El estado de los datos inicialmente esta vacío\r\n    const [patientState, setPatientState] = useState({ active: '', name: '', gender: '', birthDate: '' });\r\n\r\n    //Desestructuramos el estado para poder coger los valores por separado\r\n    const { active, name, gender, birthDate } = patientState;\r\n\r\n    const getDataPatientForm = e => {\r\n        //Para evitar el refresco de pantalla cuando le de a enviar, que es el comportamiento por defecto\r\n        e.preventDefault();\r\n        //Conseguir los datos del form\r\n        let target = e.target;\r\n        //Conseguir el nombre y el apellido\r\n        let active = target.active.value;\r\n        let name = target.name.value;\r\n        let gender = target.gender.value;\r\n        let birthDate = target.birthDate.value;\r\n        //Crear el objeto de nuevo paciente y que se guarden los datos\r\n        let patient = {\r\n            id: new Date().getTime(),\r\n            active,\r\n            name,\r\n            gender,\r\n            birthDate\r\n        };\r\n        //Asi tengo disponible dentro del estado el nuevo objeto patient creado\r\n        setPatientState(patient);\r\n\r\n        //Actualizar el estado del listado principal\r\n        {/*}\r\n        setListadoState(elementos => {\r\n            return[...elementos, patient];\r\n            //devolvemos todos los elementos que ya hubiera más el nuevo elemento creado\r\n        });\r\n        //Pasamos el metodo definido debajo para almacenr\r\n        saveInStorage(\"patients\", patient);\r\n    */}\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h3 className='title'>Añadir paciente</h3>\r\n            \r\n            {active && name && gender && birthDate}\r\n\r\n            <form className='form'>\r\n                <input type='text'\r\n                    className='form_input'\r\n                    id='active'\r\n                    name='active'\r\n                    placeholder='Activo' />\r\n<></>\r\n                <input type='text'\r\n                    className='form_input'\r\n                    id='name'\r\n                    name='name'\r\n                    placeholder='Nombre' />\r\n\r\n                <input type='text'\r\n                    className='form_input'\r\n                    id='gender'\r\n                    name='gender'\r\n                    placeholder='Género' />\r\n\r\n                <input type='text'\r\n                   className='form_input'\r\n                   id='birthDate'\r\n                   name='birthDate'\r\n                   placeholder='Fecha nacimiento' />\r\n\r\n                <input type='submit'\r\n                    id='addPatient'\r\n                    name='addPatient'\r\n                    placeholder='Añadir paciente' />\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}