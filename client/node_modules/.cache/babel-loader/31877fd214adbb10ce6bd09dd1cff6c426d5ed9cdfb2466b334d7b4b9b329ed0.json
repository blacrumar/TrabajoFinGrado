{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\blanc\\\\OneDrive - UNIVERSIDAD DE SEVILLA\\\\Escritorio\\\\4 ING SALUD\\\\Trabajo Fin de Grado\\\\intento\\\\client\\\\src\\\\components\\\\ListPractitioners.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { EditPractitioner } from '../components/EditPractitioner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ListPractitioners = () => {\n  _s();\n  const [practitioners, setPractitioners] = useState([]);\n  const [editedPractitioner, setEditedPractitioner] = useState(null);\n  //const [content, setContent] = useState(\"\");\n\n  useEffect(() => {\n    async function getPractitioner() {\n      const res = await fetch(\"/api/practitioners\");\n      const practitioners = await res.json();\n      setPractitioners(practitioners);\n    }\n    getPractitioner();\n  }, []);\n\n  // Actualizar la lista de practitioners cuando se cierra el formulario de edición\n  useEffect(() => {\n    if (editedPractitioner === null) {\n      updatePractitionerList();\n    }\n  }, [editedPractitioner]);\n  const deletePractitioner = async practitionerId => {\n    const res = await fetch(`/api/practitioners/${practitionerId}`, {\n      method: \"DELETE\"\n    });\n    const json = await res.json();\n    if (json.acknowledged) {\n      setPractitioners(currentPractitioners => {\n        return currentPractitioners.filter(currentPractitioner => currentPractitioner._id !== practitionerId);\n      });\n    }\n  };\n  const handleEditClick = practitioner => {\n    setEditedPractitioner(practitioner);\n  };\n  const handleCloseEdit = () => {\n    setEditedPractitioner(null); // Restablecer editedPractitioner a null para ocultar el componente EditPractitioner\n  };\n  const updatePractitionerList = async () => {\n    try {\n      const res = await fetch(\"/api/practitioners\");\n      const practitioners = await res.json();\n      setPractitioners(practitioners);\n    } catch (error) {\n      console.error('Error al actualizar la lista de practitioners:', error);\n    }\n  };\n  return editedPractitioner ? /*#__PURE__*/_jsxDEV(EditPractitioner, {\n    practitioner: editedPractitioner,\n    onClose: handleCloseEdit,\n    updatePractitionerList: updatePractitionerList\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    children: practitioners && practitioners.length > 0 ? practitioners.map(pr => /*#__PURE__*/_jsxDEV(\"article\", {\n      className: \"patient-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"active\",\n        children: [\"Estado:\", pr.active ? ' Activo' : ' Inactivo']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"name\",\n        children: [\"Nombre:\", pr.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"address\",\n        children: [\"G\\xE9nero:\", pr.address]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"edit\",\n          onClick: () => handleEditClick(pr),\n          children: \"Editar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"delete\",\n          onClick: () => deletePractitioner(pr._id),\n          children: \"Borrar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, pr._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 15\n    }, this)) : /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"No hay profesionales para mostrar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n};\n_s(ListPractitioners, \"AT8CJ1dvr0gPeXgFmYNeArpLtwc=\");\n_c = ListPractitioners;\nexport default ListPractitioners;\nvar _c;\n$RefreshReg$(_c, \"ListPractitioners\");","map":{"version":3,"names":["React","useEffect","useState","EditPractitioner","jsxDEV","_jsxDEV","ListPractitioners","_s","practitioners","setPractitioners","editedPractitioner","setEditedPractitioner","getPractitioner","res","fetch","json","updatePractitionerList","deletePractitioner","practitionerId","method","acknowledged","currentPractitioners","filter","currentPractitioner","_id","handleEditClick","practitioner","handleCloseEdit","error","console","onClose","fileName","_jsxFileName","lineNumber","columnNumber","children","length","map","pr","className","active","name","address","onClick","_c","$RefreshReg$"],"sources":["C:/Users/blanc/OneDrive - UNIVERSIDAD DE SEVILLA/Escritorio/4 ING SALUD/Trabajo Fin de Grado/intento/client/src/components/ListPractitioners.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { EditPractitioner } from '../components/EditPractitioner';\r\n\r\nexport const ListPractitioners = () => {\r\n\r\n  const [practitioners, setPractitioners] = useState([]);\r\n  const [editedPractitioner, setEditedPractitioner] = useState(null);\r\n  //const [content, setContent] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    async function getPractitioner() {\r\n      const res = await fetch(\"/api/practitioners\");\r\n      const practitioners = await res.json();\r\n      setPractitioners(practitioners);\r\n    }\r\n    getPractitioner();\r\n  }, []);\r\n\r\n\r\n  // Actualizar la lista de practitioners cuando se cierra el formulario de edición\r\n  useEffect(() => {\r\n    if (editedPractitioner === null) {\r\n        updatePractitionerList(); \r\n    }\r\n}, [editedPractitioner]);\r\n\r\n\r\n\r\n  const deletePractitioner = async (practitionerId) => {\r\n    const res = await fetch(`/api/practitioners/${practitionerId}`, {\r\n      method: \"DELETE\"\r\n    });\r\n    const json = await res.json();\r\n    if (json.acknowledged) {\r\n      setPractitioners(currentPractitioners => {\r\n        return currentPractitioners.filter((currentPractitioner) => currentPractitioner._id !== practitionerId);\r\n      });\r\n    }\r\n  };\r\n\r\n\r\n  const handleEditClick = (practitioner) => {\r\n    setEditedPractitioner(practitioner);\r\n  };\r\n\r\n  const handleCloseEdit = () => {\r\n    setEditedPractitioner(null); // Restablecer editedPractitioner a null para ocultar el componente EditPractitioner\r\n  };\r\n\r\n  const updatePractitionerList = async () => {\r\n    try {\r\n      const res = await fetch(\"/api/practitioners\");\r\n      const practitioners = await res.json();\r\n      setPractitioners(practitioners);\r\n    } catch (error) {\r\n      console.error('Error al actualizar la lista de practitioners:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    \r\n      editedPractitioner ? (\r\n        <EditPractitioner practitioner={editedPractitioner} onClose={handleCloseEdit} updatePractitionerList={updatePractitionerList} />\r\n      ) : (\r\n        <div>\r\n          {practitioners && practitioners.length > 0 ? (\r\n            practitioners.map(pr => (\r\n\r\n              <article key={pr._id} className=\"patient-item\">\r\n                <p className=\"active\">Estado:{pr.active ? ' Activo' : ' Inactivo'}</p>\r\n                <p className=\"name\">Nombre:{pr.name}</p>\r\n                <p className=\"address\">Género:{pr.address}</p>\r\n                \r\n                <div>\r\n                  <button className=\"edit\" onClick={() => handleEditClick(pr)}>Editar</button>\r\n                  <button className=\"delete\" onClick={() => deletePractitioner(pr._id)}>Borrar</button>\r\n                </div>\r\n              </article>\r\n            ))\r\n\r\n\r\n          ) : (\r\n\r\n            <h2>No hay profesionales para mostrar</h2>\r\n          )}\r\n\r\n        </div>\r\n      )\r\n    \r\n  )\r\n}\r\nexport default ListPractitioners;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}