{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\blanc\\\\OneDrive - UNIVERSIDAD DE SEVILLA\\\\Escritorio\\\\4 ING SALUD\\\\Trabajo Fin de Grado\\\\intento\\\\client\\\\src\\\\components\\\\EditPaciente.js\";\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const EditPaciente = () => {\n  /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"EDITAR PACIENTE\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 5\n  }, this);\n};\n\n/*\r\nconst [showEditForm, setShowEditForm] = useState(false);\r\n\r\nconst updatePaciente = async (pacienteId) => {\r\n  try {\r\n  const res = await fetch(`/api/pacientes/${pacienteId}`, {\r\n    method: \"PUT\",\r\n    body: JSON.stringify(editedPaciente),\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    },\r\n    });\r\n    const json = await res.json();\r\n  if (json.acknowledged) {\r\n    setPacientes(currentPacientes => {\r\n      return currentPacientes.map((currentPaciente) => {\r\n        if (currentPaciente._id === pacienteId) {\r\n          return { ...currentPaciente, ...editedPaciente };\r\n        }\r\n        return currentPaciente;\r\n      });\r\n      });\r\n    setShowEditForm(false);\r\n  }\r\n} catch (error) {\r\n  console.log(\"Error al actualizar el paciente:\", error);\r\n}\r\n};\r\nconst handleInputChange = (e) => {\r\nconst { name, value } = e.target;\r\nsetEditedPaciente({ ...editedPaciente, [name]: value });\r\n};\r\n  {\r\n    showEditForm ? (\r\n        <div>\r\n            <input type=\"text\" name=\"active\" value={editedPaciente.active} onChange={handleInputChange} />\r\n            <input type=\"text\" name=\"name\" value={editedPaciente.name} onChange={handleInputChange} />\r\n            <input type=\"text\" name=\"gender\" value={editedPaciente.gender} onChange={handleInputChange} />\r\n            <input type=\"text\" name=\"birthDate\" value={editedPaciente.birthDate} onChange={handleInputChange} />\r\n            <button onClick={() => updatePaciente(p._id)}>Guardar</button>\r\n        </div>\r\n    ) : (\r\n        <div>\r\n            <button className=\"edit\" onClick={() => {\r\n                setShowEditForm(true);\r\n                setEditedPaciente(p); // Inicializa el formulario con los datos del paciente\r\n            }}>Editar</button>\r\n            <button className=\"delete\" onClick={() => deletePaciente(p._id)}>Borrar</button>\r\n        </div>\r\n    )\r\n}\r\n};*/\n_c = EditPaciente;\nvar _c;\n$RefreshReg$(_c, \"EditPaciente\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","EditPaciente","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/blanc/OneDrive - UNIVERSIDAD DE SEVILLA/Escritorio/4 ING SALUD/Trabajo Fin de Grado/intento/client/src/components/EditPaciente.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nexport const EditPaciente = () => {\r\n    <h1>EDITAR PACIENTE</h1>\r\n    }\r\n\r\n    /*\r\n    const [showEditForm, setShowEditForm] = useState(false);\r\n    \r\n  const updatePaciente = async (pacienteId) => {\r\n\r\n    try {\r\n      const res = await fetch(`/api/pacientes/${pacienteId}`, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify(editedPaciente),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n\r\n      });\r\n\r\n      const json = await res.json();\r\n      if (json.acknowledged) {\r\n        setPacientes(currentPacientes => {\r\n          return currentPacientes.map((currentPaciente) => {\r\n            if (currentPaciente._id === pacienteId) {\r\n              return { ...currentPaciente, ...editedPaciente };\r\n            }\r\n            return currentPaciente;\r\n          });\r\n\r\n        });\r\n        setShowEditForm(false);\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Error al actualizar el paciente:\", error);\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setEditedPaciente({ ...editedPaciente, [name]: value });\r\n  };\r\n\r\n    {\r\n        showEditForm ? (\r\n            <div>\r\n                <input type=\"text\" name=\"active\" value={editedPaciente.active} onChange={handleInputChange} />\r\n                <input type=\"text\" name=\"name\" value={editedPaciente.name} onChange={handleInputChange} />\r\n                <input type=\"text\" name=\"gender\" value={editedPaciente.gender} onChange={handleInputChange} />\r\n                <input type=\"text\" name=\"birthDate\" value={editedPaciente.birthDate} onChange={handleInputChange} />\r\n                <button onClick={() => updatePaciente(p._id)}>Guardar</button>\r\n            </div>\r\n        ) : (\r\n            <div>\r\n                <button className=\"edit\" onClick={() => {\r\n                    setShowEditForm(true);\r\n                    setEditedPaciente(p); // Inicializa el formulario con los datos del paciente\r\n                }}>Editar</button>\r\n                <button className=\"delete\" onClick={() => deletePaciente(p._id)}>Borrar</button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n};*/"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,OAAO,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAC9B,aAAAD,OAAA;IAAAE,QAAA,EAAI;EAAe;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;AACxB,CAAC;;AAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnDIC,EAAA,GAJSN,YAAY;AAAA,IAAAM,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}