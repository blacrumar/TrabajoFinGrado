{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\blanc\\\\OneDrive - UNIVERSIDAD DE SEVILLA\\\\Escritorio\\\\4 ING SALUD\\\\Trabajo Fin de Grado\\\\intento\\\\client\\\\src\\\\components\\\\ListObservations.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ListObservations = ({\n  paciente,\n  onClose\n}) => {\n  _s();\n  const [observations, setObservations] = useState([]);\n  const [filteredObservations, setFilteredObservations] = useState([]);\n  useEffect(() => {\n    const fetchObservations = async () => {\n      try {\n        const response = await fetch('/api/observations');\n        const data = await response.json();\n        setObservations(data);\n      } catch (error) {\n        console.error('Error fetching observations:', error);\n      }\n    };\n    fetchObservations();\n  }, []);\n  useEffect(() => {\n    if (observations.length > 0 && paciente) {\n      const filtered = observations.filter(obs => obs.subject === paciente._id);\n      setFilteredObservations(filtered);\n    }\n  }, [observations, paciente]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Observaciones del Paciente\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onClose,\n      children: \"Cerrar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), filteredObservations.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: filteredObservations.map(obs => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"patient-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Fecha: \", new Date(obs.effectiveDateTime).toLocaleDateString('es-ES')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Interpretaci\\xF3n: \", obs.interpretation.text]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"C\\xF3digo: \", obs.code.text]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Valor: \", obs.valueString]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Estado: \", obs.status]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Categor\\xEDa: \", obs.category.text]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 15\n        }, this)]\n      }, obs._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No hay observaciones para este paciente.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(ListObservations, \"+IdA43Gk4HYpehpxTtNC4qTsI9A=\");\n_c = ListObservations;\nexport default ListObservations;\n\n/*\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nexport const ListObservations = ({pacienteId}) => {\r\n\r\n    const [observations, setObservations] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchObservations = async () => {\r\n            try{\r\n                const response = await fetch(`/api/pacientes/${pacienteId}/observations`);\r\n                if(response.ok){\r\n                    const data = await response.json();\r\n                    setObservations(data);\r\n                } else {\r\n                    console.error('Error al cargar las observaciones:');\r\n                }\r\n            } catch (error) {\r\n                console.error('Error al conectar con el servidor:', error);\r\n\r\n            }\r\n        };\r\n        fetchObservations();\r\n    }, [pacienteId]);\r\n*/\nvar _c;\n$RefreshReg$(_c, \"ListObservations\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","ListObservations","paciente","onClose","_s","observations","setObservations","filteredObservations","setFilteredObservations","fetchObservations","response","fetch","data","json","error","console","length","filtered","filter","obs","subject","_id","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","className","Date","effectiveDateTime","toLocaleDateString","interpretation","text","code","valueString","status","category","_c","$RefreshReg$"],"sources":["C:/Users/blanc/OneDrive - UNIVERSIDAD DE SEVILLA/Escritorio/4 ING SALUD/Trabajo Fin de Grado/intento/client/src/components/ListObservations.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nexport const ListObservations = ({ paciente, onClose }) => {\r\n\r\n    const [observations, setObservations] = useState([]);\r\n  const [filteredObservations, setFilteredObservations] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchObservations = async () => {\r\n      try {\r\n        const response = await fetch('/api/observations');\r\n        const data = await response.json();\r\n        setObservations(data);\r\n      } catch (error) {\r\n        console.error('Error fetching observations:', error);\r\n      }\r\n    };\r\n\r\n    fetchObservations();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (observations.length > 0 && paciente) {\r\n      const filtered = observations.filter(obs => obs.subject === paciente._id);\r\n      setFilteredObservations(filtered);\r\n    }\r\n  }, [observations, paciente]);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Observaciones del Paciente</h2>\r\n      \r\n      <button onClick={onClose}>Cerrar</button>\r\n      \r\n      {filteredObservations.length > 0 ? (\r\n        <ul>\r\n          {filteredObservations.map(obs => (\r\n            <li key={obs._id} className=\"patient-item\">\r\n              \r\n              <p>Fecha: {new Date(obs.effectiveDateTime).toLocaleDateString('es-ES')}</p>\r\n              <p>Interpretación: {obs.interpretation.text}</p>\r\n              <p>Código: {obs.code.text}</p>\r\n              <p>Valor: {obs.valueString}</p>\r\n              <p>Estado: {obs.status}</p>\r\n              <p>Categoría: {obs.category.text}</p>\r\n            </li>\r\n            \r\n          ))}\r\n          \r\n        </ul>\r\n       \r\n      ) : (\r\n        <p>No hay observaciones para este paciente.</p>\r\n      )}\r\n      </div>\r\n\r\n  );\r\n};\r\n\r\nexport default ListObservations;\r\n\r\n/*\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nexport const ListObservations = ({pacienteId}) => {\r\n\r\n    const [observations, setObservations] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchObservations = async () => {\r\n            try{\r\n                const response = await fetch(`/api/pacientes/${pacienteId}/observations`);\r\n                if(response.ok){\r\n                    const data = await response.json();\r\n                    setObservations(data);\r\n                } else {\r\n                    console.error('Error al cargar las observaciones:');\r\n                }\r\n            } catch (error) {\r\n                console.error('Error al conectar con el servidor:', error);\r\n\r\n            }\r\n        };\r\n        fetchObservations();\r\n    }, [pacienteId]);\r\n*/\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}